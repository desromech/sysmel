TypeSlot
    withSelector: #generateGetterWithPointerLikeReceiver:on: addMethod: {:(TypeSlot)self :(Type)ReceiverType :(Type)ownerType :: Void |
        let: #SlotType with: (self __slotNamedAt__: #type).
        ownerType withSelector: self getterSelector addMaybeVirtualMethod: ({:(ReceiverType)receiver :: SlotType |
            (RawTuple::refTypeSlotAt:)(receiver, self)
        } recompileAndOptimize makePure makeFinal makeAlwaysInline makeWithoutSourceDebugging)
    };
    withSelector: #generateSetterWithPointerLikeReceiver:on: addMethod: {:(TypeSlot)self :(Type)ReceiverType :(Type)ownerType :: Void |
        let: #SlotType with: (self __slotNamedAt__: #type).
        ownerType withSelector: self setterSelector addMaybeVirtualMethod: ({:(ReceiverType)receiver :(SlotType)value :: Void |
            (RawTuple::refTypeSlotAt:put:)(receiver, self, value)
        } recompileAndOptimize makeFinal makeAlwaysInline makeWithoutSourceDebugging)
    }.
    
PointerLikeType
    withSelector: #ReceiverType::generateGetterFor:on: addMethod: {:(Type)self :(TypeSlot)typeSlot :(Type)ownerType :: Void |
        typeSlot generateGetterWithPointerLikeReceiver: self on: ownerType.
    } makeVirtual;
    withSelector: #ReceiverType::generateSetterFor:on: addMethod: {:(Type)self :(TypeSlot)typeSlot :(Type)ownerType :: Void |
        typeSlot generateSetterWithPointerLikeReceiver: self on: ownerType.
    } makeOverride.
