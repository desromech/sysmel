public final class TACStackFrameLayout superclass: Object; definition: {
    protected field compilationTarget => TACCompilationTarget.

    public field stackFrameSize => UInt64.
    public field stackFrameAlignment => UInt64.

    public method initialize => Void := {
    }.

    public method isRequired => Boolean
        := stackFrameSize > 0u64.

    public method temporaryFrameSize => UInt64
        := stackFrameSize.

    public method buildLayoutForFunction: (function: TACFunction) registerAllocator: (registerAllocator: TACRegisterAllocator) withTarget: (target: TACCompilationTarget) ::=> Void := {
        compilationTarget := target.

        stackFrameAlignment := compilationTarget stackFrameAlignment asUInt64.

        function temporaries do: {:(TACTemporaryVariable)eachLocal :: Void |
            let localAlignment := eachLocal alignment.
            stackFrameSize := stackFrameSize + eachLocal size alignedTo: localAlignment.
            stackFrameAlignment := stackFrameAlignment max: localAlignment.
            eachLocal offset: stackFrameSize asInt64 negated.
        }.

        stackFrameSize := stackFrameSize alignedTo: stackFrameAlignment
    }.
}.