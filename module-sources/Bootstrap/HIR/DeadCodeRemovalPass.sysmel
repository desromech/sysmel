public class HIRDeadCodeRemovalPass superclass: HIRFunctionDefinitionPass; definition: {
    public override method runInFunctionDefinition: (function: HIRFunctionDefinition) ::=> Void := {
        let pendingWork := OrderedInsertionIdentitySet new.
        function instructionsDo: {:(HIRInstruction)each :: Void |
            (each userCount = 0sz) && each hasSideEffects not ifTrue: {
                pendingWork add: each
            }.
        }.

        while: pendingWork isNotEmpty do: {
            let variable => HIRInstruction := pendingWork removeLast.
            variable parent ifNil: continue().

            variable userCount = 0sz ifTrue: {
                variable usedValuesDo: {:(HIRValue)eachUsedValue :: Void |
                    eachUsedValue isInstruction && eachUsedValue hasSideEffects not ifTrue: {
                        pendingWork add: eachUsedValue
                    }
                }.
                
                variable deleteFromParent
            }.
        }.
    }.
}.
