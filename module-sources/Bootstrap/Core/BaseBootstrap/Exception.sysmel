Exception definition: {
    public virtual eager method defaultMessageText => String
        := "an " -- self class printString.

    public override eager method asString => String
        := messageText ifNil: self defaultMessageText.

    public override eager method printString => String
        := messageText ifNil: self defaultMessageText.

    public override eager method printOn: (stream: Stream) ::=> Void := {
        stream nextPutAll: (messageText ifNil: self defaultMessageText)
    }.
}.

(Function::ensure:) adoptDefinitionOf: {:body :(() => Void)cleanUp :: AnyValue |
    <primitive: #Function::ensure: >
    let result := body().
    cleanUp().
    result.
}.

(Function::on:do:) adoptDefinitionOf: {:body :exceptionFilter :exceptionBlock :: AnyValue |
    <primitive: #Function::on:do: >
    body()
}.
