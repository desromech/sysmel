StringSymbol extend: {
    public method numSelectorArgs => Size := {
        let count mutable := 0sz.
        let i mutable := 0sz.
        let size := self size.
        while: (i < size) do: {
            if: (self at: i) = ':'asChar8 then: {
                if: (i + 1sz == size) || (((i + 1sz) < size) && ((self at: i) = ':'asChar8 )) then: {
                    count := i + 1sz
                }
            }
        } continueWith: (i := i + 1sz).
        count
    }.

    public method beginsWith: (prefix: String) ::=> Boolean := {
        let prefixSize := prefix size.
        if: self size < prefixSize then: {return: false}.

        let i mutable := 0sz.
        while: (i < prefixSize) do: {
            if: (self at: i) ~= (prefix at: i) then: {return: false}
        } continueWith: (i := i + 1sz).

        true
    }
}.
