## Some utility functions.

## until:do:
(define (until:do: stop block)
    (define ibox (RawTuple::new 1))
    (define (i) (RawTuple::slotAt: ibox 0))
    (define (i: v) (RawTuple::slotAt:put: ibox 0 v))
    (i: 0)
    (while:continueWith: (Integer::< (i) stop)
        (block (i))
        (i: (Integer::+ (i) 1))))

## exportInstrinsicBuiltInBinding
(define (exportInstrinsicBuiltInBinding symbol binding)
    (Environment::setSymbol:binding: BootstrapEnv::IntrinsicsBuiltInEnvironment symbol binding))

## Type::validMethodDictionary
(define (Type::validMethodDictionary type)
    (define existingMethodDictionary (RawTuple::slotAt: type 7))
    (if:then:else: (== existingMethodDictionary nil)
        (begin
            (define newMethodDictionary (IdentityDictionary::new))
            (RawTuple::slotAt:put: type 7 newMethodDictionary)
            newMethodDictionary)
        existingMethodDictionary))

## Bootstrap environment reflection core.
(define (makeTypeAccessors type)
    (define typeName (RawTuple::slotAt: type 0))

    (define (exportAndBindInstanceMethod selector method)
        (define exportedName (Symbol::intern (String::concat: typeName (String::concat: "::" (asString selector)))))
        (Dictionary::at:put: (Type::validMethodDictionary type) selector method)
        (exportInstrinsicBuiltInBinding exportedName method))

    (define slotNames (RawTuple::slotAt: type 2))
    (define slotCount (RawTuple::size slotNames))
    (define supertype (RawTuple::slotAt: type 1))
    (define supertypeSlotCount (if:then:else: (== supertype nil)
        0
        (RawTuple::slotAt: supertype 4)))
    (until:do: slotCount (lambda (localSlotIndex)
        (define slotIndex (Integer::+ supertypeSlotCount localSlotIndex))
        (define slotName (RawTuple::slotAt: slotNames localSlotIndex))

        ## Getter
        (exportAndBindInstanceMethod slotName (lambda (self)
            (RawTuple::slotAt: self slotIndex)))

        ## Setter
        (exportAndBindInstanceMethod (Symbol::intern (String::concat: (asString slotName) ":"))
            (lambda (self value)
                (RawTuple::slotAt:put: self slotIndex value)))
        )))

(define intrinsicTypeCount (RawTuple::slotAt: BootstrapEnv::IntrinsicTypes 0))
(define intrinsicTypes (RawTuple::slotAt: BootstrapEnv::IntrinsicTypes 1))
(until:do: intrinsicTypeCount (lambda (i)
    (define intrinsicType (RawTuple::slotAt: intrinsicTypes i))
    (makeTypeAccessors intrinsicType)
    ))

## Type::withSelector:addMethod:
(define (Type::withSelector:addMethod: type selector method)
    (Dictionary::at:put: (Type::validMethodDictionary type) selector method))

(Type::withSelector:addMethod: SourcePosition #printString (lambda (sourcePosition)
    (define sourceName (SourceCode::name (SourcePosition::sourceCode sourcePosition)))
    (define startIndex (SourcePosition::startIndex sourcePosition))
    (define endIndex (SourcePosition::endIndex sourcePosition))

    (define startLine (SourcePosition::startLine sourcePosition))
    (define startColumn (SourcePosition::startColumn sourcePosition))
    (define startString (String::concat: (String::concat: (asString startLine) ".") (asString startColumn)))

    (define endLine (SourcePosition::endLine sourcePosition))
    (define endColumn (SourcePosition::endColumn sourcePosition))
    (define endString (String::concat: (String::concat: (asString endLine) ".") (asString endColumn)))

    (String::concat: (String::concat: (String::concat: sourceName ":") startString)
        (String::concat: "-" endString))
    ))

(exportInstrinsicBuiltInBinding #Type::withSelector:addMethod: Type::withSelector:addMethod:)
(exportInstrinsicBuiltInBinding #Type::validMethodDictionary Type::validMethodDictionary)

## Register the Type methods.
(Type::withSelector:addMethod: Type #withSelector:addMethod: Type::withSelector:addMethod:)
(Type::withSelector:addMethod: Type #validMethodDictionary Type::validMethodDictionary)

