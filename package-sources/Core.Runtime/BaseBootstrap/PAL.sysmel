public struct SysmelPAL::File definition: {}.

public final struct SysmelPAL::Thread definition: {
    public field reserved => UInt64.
}.

public final struct SysmelPAL::Mutex definition: {
    public field reserved => UInt64[8sz].

    public override nogc inline method initialize => Void := {
        sysmel_pal_mutex_initialize(self address)
    }.

    public override nogc inline method finalize => Void := {
        sysmel_pal_mutex_finalize(self address)
    }.

    public inline nogc method lock => Void := {
        sysmel_pal_mutex_lock(self address)
    }.

    public inline nogc method unlock => Void := {
        sysmel_pal_mutex_unlock(self address)
    }.
}.

public final struct SysmelPAL::Condition definition: {
    public field reserved => UInt64[8sz].

    public override nogc inline method initialize => Void := {
        sysmel_pal_condition_initialize(self address)
    }.

    public override nogc inline method finalize => Void := {
        sysmel_pal_condition_finalize(self address)
    }.

    public inline nogc method wait: (mutex: SysmelPAL::Mutex pointer) ::=> Void := {
        sysmel_pal_condition_wait(self address, mutex)
    }.

    public inline nogc method signal => Void := {
        sysmel_pal_condition_signal(self address)
    }.

    public inline nogc method broadcast => Void := {
        sysmel_pal_condition_broadcast(self address)
    }.
}.

public global SysmelPAL::FileHandle := SysmelPAL::File pointer.

public global SysmelPAL::FileOpenFlags::ReadOnly := 1u32 << 0u32.
public global SysmelPAL::FileOpenFlags::WriteOnly := 1u32 << 1u32.
public global SysmelPAL::FileOpenFlags::ReadWrite := 1u32 << 2u32.

public global SysmelPAL::FileOpenFlags::Create := 1u32 << 3u32.
public global SysmelPAL::FileOpenFlags::Truncate := 1u32 << 4u32.
public global SysmelPAL::FileOpenFlags::Append := 1u32 << 5u32.
public global SysmelPAL::FileOpenFlags::CloseOnExec := 1u32 << 6u32.

public global SysmelPAL::FileCreationPermissions::None := 0u32.
public global SysmelPAL::FileCreationPermissions::RegularFileDefaults := 8r644 u32.
public global SysmelPAL::FileCreationPermissions::DirectoryDefaults := 8r755 u32.
public global SysmelPAL::FileCreationPermissions::ProgramDefaults := 8r755 u32.

public global SysmelPAL::SeekMode::Set := 0i32.
public global SysmelPAL::SeekMode::Current := 1i32.
public global SysmelPAL::SeekMode::End := 2i32.

public externC function sysmel_pal_abort() => Unwinds.

public externC function sysmel_pal_malloc(size: Size) => Void pointer.
public externC function sysmel_pal_free(pointer: Void pointer) => Void.

public externC function sysmel_pal_allocateSystemMemory(size: Size) => Void pointer.
public externC function sysmel_pal_freeSystemMemory(memoryPointer: Void pointer, size: Size) => Void.

public externC function sysmel_pal_supportsMemoryWithDualMappingForJIT() => Boolean.
public externC function sysmel_pal_allocateMemoryWithDualMappingForJIT(size: Size, outHandle: Void pointer ref, outWriteMemoryPointer: Void pointer ref, outExecuteMemoryPointer: Void pointer ref) => Boolean.
public externC function sysmel_pal_freeMemoryWithDualMappingForJIT(size: Size, handle: Void pointer, writeMemoryPointer: Void pointer, executeMemoryPointer: Void pointer) => Void.

public externC function sysmel_pal_getStdinFileHandle() => SysmelPAL::FileHandle.
public externC function sysmel_pal_getStdoutFileHandle() => SysmelPAL::FileHandle.
public externC function sysmel_pal_getStderrFileHandle() => SysmelPAL::FileHandle.

public externC function sysmel_pal_openFile(nameSize: Size, name: Char8 const pointer, openFlags: UInt32, creationPermissions: UInt32) => SysmelPAL::FileHandle.
public externC function sysmel_pal_closeFile(handle: SysmelPAL::FileHandle) => Void.
public externC function sysmel_pal_isFileHandleValid(handle) => Boolean.

public externC function sysmel_pal_seek(handle: SysmelPAL::FileHandle, offset: Int64, mode: Int32) => Int64.

public externC function sysmel_pal_writeToFile(handle: SysmelPAL::FileHandle, size: Size, buffer: Void const pointer) => IntPointer.
public externC function sysmel_pal_writeToFileAtOffset(handle: SysmelPAL::FileHandle, offset: UInt64, size: Size, buffer: Void const pointer) => IntPointer.

public externC function sysmel_pal_readFromFile(handle: SysmelPAL::FileHandle, size: Size, buffer: Void pointer) => IntPointer.
public externC function sysmel_pal_readFromFileAtOffset(handle: SysmelPAL::FileHandle, offset: UInt64, size: Size, buffer: Void pointer) => IntPointer.

public externC function sysmel_pal_parseFloat64(size: Size, string: Char8 const pointer) => Float64.
public externC function sysmel_pal_float64ToString(value: Float64) => Char8 pointer.

public externC function sysmel_pal_microsecondsNow() => Int64.
public externC function sysmel_pal_nanosecondsNow() => Int64.

public externC function sysmel_pal_mutex_initialize(handle: SysmelPAL::Mutex pointer) => Void.
public externC function sysmel_pal_mutex_finalize(handle: SysmelPAL::Mutex pointer) => Void.
public externC function sysmel_pal_mutex_lock(handle: SysmelPAL::Mutex pointer) => Void.
public externC function sysmel_pal_mutex_unlock(handle: SysmelPAL::Mutex pointer) => Void.

public externC function sysmel_pal_condition_initialize(handle: SysmelPAL::Condition pointer) => Void.
public externC function sysmel_pal_condition_finalize(handle: SysmelPAL::Condition pointer) => Void.
public externC function sysmel_pal_condition_wait(handle: SysmelPAL::Condition pointer, mutex: SysmelPAL::Mutex pointer) => Void.
public externC function sysmel_pal_condition_signal(handle: SysmelPAL::Condition pointer) => Void.
public externC function sysmel_pal_condition_broadcast(handle: SysmelPAL::Condition pointer) => Void.
