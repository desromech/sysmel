public global NativeCodeSymbol::Visibility::NameTable := #(private internal public weak).
public global NativeCodeSymbol::Visibility::Private := 0u8.
public global NativeCodeSymbol::Visibility::Internal := 1u8.
public global NativeCodeSymbol::Visibility::Public := 2u8.
public global NativeCodeSymbol::Visibility::Weak := 3u8.

public global NativeCodeSymbol::Type::NameTable := #(none function variable section tls gc gcfat).
public global NativeCodeSymbol::Type::None := 0u8.
public global NativeCodeSymbol::Type::Function := 1u8.
public global NativeCodeSymbol::Type::Variable := 2u8.
public global NativeCodeSymbol::Type::Section := 3u8.
public global NativeCodeSymbol::Type::TLS := 4u8.
public global NativeCodeSymbol::Type::GCPointerTable := 5u8.
public global NativeCodeSymbol::Type::GCFatPointerTable := 6u8.

NativeCodeSymbol definition: {

    public method isGCObject => Boolean
        := (type = NativeCodeSymbol::Type::GCPointerTable) || (type = NativeCodeSymbol::Type::GCFatPointerTable).

    public method isPrivate => Boolean
        := visibility = NativeCodeSymbol::Visibility::Private.

    public override method printOn: (stream: Stream) ::=> Void := {
        name
            ifNil: (stream print: section; nextPut: '+'c8; print: value);
            ifNotNil: (stream string: name)
    }.

    public override method fullPrintOn: (stream: Stream) ::=> Void := {
        stream 
            string: (NativeCodeSymbol::Visibility::NameTable at: visibility asSize);
            space; string: (NativeCodeSymbol::Type::NameTable at: type asSize);
            space; string: (name ifNil: "-");
            space; print: section;
            space; print: value
    }.
}.

