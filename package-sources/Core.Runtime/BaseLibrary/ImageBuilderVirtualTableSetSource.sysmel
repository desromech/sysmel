public final class ImageBuilderVirtualTableSetSource superclass: VirtualTableSetSource; definition: {
    private field virtualTableLayouts => ObjectPointerDictionary.
    private field virtualTables => ObjectPointerDictionary.

    public override method initialize => Void := {
        virtualTableLayouts := ObjectPointerDictionary new.
        virtualTables := ObjectPointerDictionary new.
    }.

    public override method getVirtualTableLayoutFor: (type: Type) ::=> VirtualTableLayout := {
        virtualTableLayouts at: type ifAbsentPut: {:: VirtualTableLayout |
            let newLayout := VirtualTableLayout new.

            let supertype := type supertype.
            newLayout setSupertypeLayout: (supertype ifNotNil: { self getVirtualTableLayoutFor: supertype }).

            let virtualMethodSelectorList := type virtualMethodSelectorList.
            virtualMethodSelectorList ifNotNil: {
                newLayout addSelectors: virtualMethodSelectorList
            }.

            newLayout newSelectors isNil && supertype isNotNil ifTrue: {
                newLayout supertypeLayout
            } ifFalse: {
                newLayout
            }
        }
    }.

    public override method getVirtualTableFor: (type: Type) ::=> VirtualTable := {
        virtualTables at: type ifAbsentPut: {:: VirtualTable |
            let layout := self getVirtualTableLayoutFor: type.
            (layout type == type) || type virtualMethodSelectorList isNotNil || type supertype isNil ifTrue: {
                layout buildVirtualTableFor: type
            } ifFalse: {
                self getVirtualTableFor: type supertype
            }
        }
    }.

    public override method getVirtualTableLayoutOrNilOf: (type: Untyped) ::=> VirtualTableLayout
        := virtualTableLayouts untypedAtOrNil: type.

    public override method getVirtualTableOrNilOf: (type: Untyped) ::=> VirtualTable
        := virtualTables untypedAtOrNil: type.
}.
