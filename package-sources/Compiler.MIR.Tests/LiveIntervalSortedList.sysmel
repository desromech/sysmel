public class LiveIntervalSortedListTestCase superclass: TestCase; definition: {
    public method testEmpty => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        self assert: sortedList size equals: 0sz.
    }.

    public method testSingleInterval => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let interval := MIRLiveInterval from: 0u32 until: 2u32.
        sortedList add: interval.
        self assert: sortedList size equals: 1sz.
        self assert: sortedList elements first equals: interval.
    }.

    public method testTwoIntervals => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        sortedList add: first; add: second.
        self assert: sortedList size equals: 2sz.
        self assert: sortedList elements first equals: first.
        self assert: sortedList elements second equals: second.
    }.

    public method testTwoIntervals2 => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        sortedList add: second; add: first.
        self assert: sortedList size equals: 2sz.
        self assert: sortedList elements first equals: first.
        self assert: sortedList elements second equals: second.
    }.

    public method testThreeIntervals => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        let third := MIRLiveInterval from: 2u32 until: 5u32.
        sortedList add: second; add: first; add: third.
        self assert: sortedList size equals: 3sz.
        self assert: sortedList elements first equals: first.
        self assert: sortedList elements second equals: second.
        self assert: sortedList elements third equals: third.
    }.

    public method textExpireAtNone => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        let third := MIRLiveInterval from: 2u32 until: 5u32.
        sortedList add: second; add: first; add: third.
        sortedList expireAt: 1u32.
        self assert: sortedList size equals: 3sz.
        self assert: sortedList elements first equals: first.
        self assert: sortedList elements second equals: second.
        self assert: sortedList elements third equals: third.
    }.

    public method testExpireAtOne => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        let third := MIRLiveInterval from: 2u32 until: 5u32.
        sortedList add: second; add: first; add: third.
        sortedList expireAt: 2u32.
        self assert: sortedList size equals: 2sz.
        self assert: sortedList elements first equals: second.
        self assert: sortedList elements second equals: third.
    }.

    public method testExpireAtTwo => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        let third := MIRLiveInterval from: 2u32 until: 5u32.
        sortedList add: second; add: first; add: third.
        sortedList expireAt: 3u32.
        self assert: sortedList size equals: 1sz.
        self assert: sortedList elements first equals: third.
    }.

    public method testExpireAtAll => Void := {
        let sortedList := MIRLiveIntervalSortedList new.
        let first := MIRLiveInterval from: 0u32 until: 2u32.
        let second := MIRLiveInterval from: 1u32 until: 3u32.
        let third := MIRLiveInterval from: 2u32 until: 5u32.
        sortedList add: second; add: first; add: third.
        sortedList expireAt: 5u32.
        self assert: sortedList size equals: 0sz.
    }.
}.
