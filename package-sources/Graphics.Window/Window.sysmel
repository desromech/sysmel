public class WindowSystem superclass: Object.

public class Window superclass: Object; definition: {
    private field windowSystem => WindowSystem.
    private field handle => SysmelPAL::WindowHandle.

    public method initializeWithWindowSystem: (initialWindowSystem: WindowSystem) handle: (initialHandle: SysmelPAL::WindowHandle) ::=> Void := {
        windowSystem := initialWindowSystem.
        handle := initialHandle
    }.

    public inline method handle => SysmelPAL::WindowHandle := handle.

    public method close => Void := {
        handle ifNil: {return: void}.

        sysmel_pal_window_destroy(handle).
        handle := nil.
    }.

    public method convertAndDispatchEvent: (event: SysmelPAL::WindowEvent ref) ::=> Void := {
        switch: event type withCases: #{
        SysmelPAL::WindowEventType::Exposed : {
            printLine("WindowEventType::Exposed").
        }.
        SysmelPAL::WindowEventType::Close : {
            printLine("WindowEventType::Close").
        }.
        _:{}
        }
    }.
}.
