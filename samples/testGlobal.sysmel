public threadLocal myMutableGlobal mutable := 42i32.

public function increment() => Int32
    := myMutableGlobal := myMutableGlobal + 1i32.

printLine(increment()).
printLine(increment()).
printLine(increment()).

let hirModule := HIRModuleCompilationContext forDefaultTarget
    exclusiveCompilationMode: true;
    compileFunctionsWithDefinitions: (increment, ExceptionSetjmpBuffer >> #setjmp, ExceptionSetjmpBuffer >> #longjmp);
    finish.

printLine(hirModule fullPrintString).

let mirModule := hirModule asMIRModuleFor: AsmCompilationTarget x86_64 useElf useDwarf asMirCompilationTarget.
printLine(mirModule fullPrintString).

let lirModule := mirModule asTargetIR.
printLine(lirModule fullPrintString).

lirModule assemble writeObjectToFileNamed: "testGlobal.o".
