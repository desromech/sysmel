public function MySelect(condition: Boolean, a: Int32, b: Int32) => Int32
    := condition ifTrue: a ifFalse: b.

public function sleb128Size(value: Int64) => Size := {
    let result mutable := 0sz.
    let more mutable := true.

    let currentValue mutable := value.
    while: more do: {
        let byte := (currentValue & 127i64) asInt8.
        currentValue := currentValue >> 7i64.
        
        let byteHasSign := (byte & 16r40 i8) ~= 0i8.
        ((currentValue = 0i64) && byteHasSign not) || (currentValue == -1i64 && byteHasSign) ifTrue: {
            more := false
        }.

        result := result + 1sz.
    }.
    result
}.

public function MySum(N: Int32, alpha: Int32) => Int32 := {
    let result mutable := 0i32.
    let i mutable := 0i32.
    while: (i < N) do: {
        result := result + (i * alpha).
    } continueWith: (i := i + 1i32).
    result
}.

public function NoRttiImageMain(argc: Int32, argv: Char8 const pointer pointer) => Int32 := {
    sleb128Size(42i64).
    sleb128Size(-42i64).
    ##MySelect(false, 1i32, 2i32).
    ##MySum(100i32, 3i32).
    ##memset(nil, 0i8, 32sz).
    0i32
}.

#*public function NoRttiImageMain(argc: Int32, argv: Char8 const pointer pointer) => Int32 := {
    "Hello World\n" writeOntoStdout.

    argc negated asString writeOntoStdout.
    "\n" writeOntoStdout.

    let testArray := (1, "Hello", argc asString).
    testArray size asString asString writeOntoStdout.

    let testByteArray := #[1u8. argc asUInt8].
    testByteArray size asString asString writeOntoStdout.

    ##let myObject := Object basicAllocate.
    ##let myObject := Object new.

    let i mutable := 0i32.
    while: (i < argc) do: {
        (String fromCString: argv[i asIntPointer]) writeOntoStdout.
        "\n" writeOntoStdout.
    } continueWith: (i := i + 1i32).

    0i32
}.

ImageBuilder new
    beNoRTTI;
    withoutInProcessDebugInformation;
    useDynamicMessaging;
    addNativeEntryPoint: NoRttiImageMain;
    build;
    saveTo: "testNoRTTI.image".
*#

ImageBuilder new
    target: AsmCompilationTarget x86_64 useElf useDwarf asImageBuilderTarget;
    beNoRTTI;
    withoutInProcessDebugInformation;
    ##useDefaultTypeTables;
    addNativeEntryPoint: NoRttiImageMain;
    build;
    saveTo: "testNoRTTI.x86_64.elf".
