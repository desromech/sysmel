let module := TACModule new
    compilationTarget: AsmCompilationTarget x86_64 useElf asTacCompilationTarget;
    yourself.
let addFunction := module build: #add function: {:(TACFunctionBuilder)functionBuilder :: Void |
    functionBuilder basicBlock: #entry build: {:(TACBlockBuilder)asm :: Void |
        let result := asm temporaryInt32.
        asm
            addInt32: 2i32 asTacConstant with: 3i32 asTacConstant into: result;
            returnInt32: result
    }
}.

module build: #main function: {:(TACFunctionBuilder)functionBuilder :: Void |
    functionBuilder basicBlock: #entry build: {:(TACBlockBuilder)asm :: Void |
        let result := asm temporaryInt32.

        asm
            callInt32: addFunction arguments: #() result: result;
            returnInt32: result
    }
}.

printLine(module fullPrintString).
let targetAssembly := module asTargetIR.
printLine(targetAssembly fullPrintString).
targetAssembly assemble writeObjectToFileNamed: "testTAC.x86_64.elf64".
