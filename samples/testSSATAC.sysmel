let compilationTarget := AsmCompilationTarget x86_64 useElf asTacCompilationTarget.

public externC function write(fd: Int32, buf: Void const pointer, count: Size).
public externC function malloc(size: Size) => Void pointer.

public function myAddFunction(x: Int32, y: Int32) => Int32
    := x + y.

public externC function main() => Int32 := {
    malloc(3sz).
    myAddFunction(2i32, 3i32).
}.

let ssaModule := main asSSAModule.
printLine(ssaModule fullPrintString).

let tacModule := ssaModule asTACModuleFor: compilationTarget.
printLine(tacModule fullPrintString).

let targetAssembly := tacModule asTargetIR.
printLine(targetAssembly fullPrintString).
targetAssembly assemble writeObjectToFileNamed: "testTACSSA.x86_64.elf64".
