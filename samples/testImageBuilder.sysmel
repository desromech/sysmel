public function evaluateString(string: String) => Void := {
    printLine("Evaluating ", string).
    let result := SysmelLanguage analyzeAndEvaluateSourceCode: (SourceCode text: string directory: nil name: "test" language: #sysmel).
    printLine(result)
}.

public function TestImageMain(argc: Int32, argv: Char8 const pointer pointer) => Int32 := {
    let i mutable := 1i32.
    while: (i < argc) do: {
        let expression := String fromCString: argv[i asIntPointer].
        evaluateString(expression)
    } continueWith: (i := i + 1i32).

    0i32
}.

ImageBuilder new
    beNoSourceDefinition;
    withoutInProcessDebugInformation;
    useDefaultTypeTables;
    addProgramEntity: __Global__;
    addNativeEntryPoint: TestImageMain;
    build;
    saveTo: "testImage.image".

ImageBuilder new
    target: AsmCompilationTarget x86_64 useElf useDwarf asImageBuilderTarget;
    beNoSourceDefinition;
    withoutInProcessDebugInformation;
    useDefaultTypeTables;
    addProgramEntity: __Global__;
    addNativeEntryPoint: TestImageMain;
    build;
    saveTo: "testImage.x86_64.elf".

#*
ImageBuilder new
    beComplete;
    useDefaultTypeTables;
    addProgramEntity: __Global__;
    addNativeEntryPoint: TestImageMain;
    build;
    saveTo: "testCompleteImage.image".
*#

#*
ImageBuilder new
    target: AsmCompilationTarget x86_64 useElf useDwarf asImageBuilderTarget;
    beComplete;
    useDefaultTypeTables;
    addProgramEntity: __Global__;
    addNativeEntryPoint: TestImageMain;
    build;
    saveTo: "testCompleteImage.x86_64.elf".
*#