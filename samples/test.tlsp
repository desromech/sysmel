## Some utility functions.
(define (until:do: stop block)
    (define i 0)
    (whileContinueWith (Integer::< i stop)
        (block i)
        (define i (Integer::+ i 1))))

(define (exportInstrinsicBuiltInBinding symbol binding)
    (Environment::setSymbol:binding: BootstrapEnv::IntrinsicsBuiltInEnvironment symbol binding))

## Bootstrap environment reflection core.
(define (makeTypeAccessors type)
    (define typeName (RawTuple::slotAt: type 0))

    (define (exportAndBindInstanceMethod selector method)
        (define exportedName (Symbol::intern (String::concat: typeName (String::concat: "::" (toString selector)))))
        (exportInstrinsicBuiltInBinding exportedName method))

    (define slotNames (RawTuple::slotAt: type 2))
    (define slotCount (RawTuple::size slotNames))
    (define supertype (RawTuple::slotAt: type 1))
    (define supertypeSlotCount (if (== supertype nil)
        0
        (RawTuple::slotAt: type 4)))
    (until:do: slotCount (lambda (localSlotIndex)
        (define slotIndex (Integer::+ supertypeSlotCount localSlotIndex))
        (define slotName (RawTuple::slotAt: slotNames localSlotIndex))

        ## Getter
        (exportAndBindInstanceMethod slotName (lambda (self)
            (RawTuple::slotAt: self slotIndex)))

        ## Setter
        (exportAndBindInstanceMethod (Symbol::intern (String::concat: (toString slotName) ":"))
            (lambda (self)
                (RawTuple::slotAt: self slotIndex)))
        )))

(define intrinsicTypeCount (RawTuple::slotAt: BootstrapEnv::IntrinsicTypes 0))
(define intrinsicTypes (RawTuple::slotAt: BootstrapEnv::IntrinsicTypes 1))
(until:do: intrinsicTypeCount (lambda (i)
    (define intrinsicType (RawTuple::slotAt: intrinsicTypes i))
    (makeTypeAccessors intrinsicType)
    ))

## Testing code goes here.

(printLine BootstrapEnv::IntrinsicsBuiltInEnvironment)
(printLine BootstrapEnv::IntrinsicTypes)

(print "Hello World\n")
(printLine "Hello World")
(printLine #testSymbol)

(printLine (toString "Hello World"))

(printLine (if true (begin 1 2) 42))
(printLine (if false 1 (begin 42 43)))

(define (lookupSelector type selector)
    type)

(define (send receiver selector arguments)
    (define receiverType (RawTuple::type receiver))
    (lookupSelector receiverType selector))

(printLine (Type::name Type))
(printLine (Type::supertype Type))
(printLine (Type::slotNames Type))

(printLine (send 1 #add: 1))

(printLine (RawTuple::slotAt: -1 0))
(printLine (RawTuple::slotAt: -2 0))

(printLine (RawTuple::slotAt: "Hello World\n" 0))
(printLine (RawTuple::slotAt: "Hello World\n" 1))

(printLine (RawTuple::new 10))
(printLine (RawTuple::byteNew 10))

(printLine (UInt32::fromInteger 42))
