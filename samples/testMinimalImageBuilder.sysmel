public function MinimalImageMain(argc: Int32, argv: Char8 const pointer pointer) => Int32 := {
    "Hello World\n" writeOntoStdout.

    argc negated asString writeOntoStdout.
    "\n" writeOntoStdout.

    ##let initialize := ObjectModel::lookupVirtualSelector(myObject, #initialize).
    ##let initialize := ObjectModel::lookupVirtualSelectorWithReceiverType(Object, #initialize).
    let myObject := Object new.

    let i mutable := 0i32.
    while: (i < argc) do: {
        (String fromCString: argv[i asIntPointer]) writeOntoStdout.
        "\n" writeOntoStdout.
    } continueWith: (i := i + 1i32).

    0i32
}.

ImageBuilder new
    beMinimal;
    withoutInProcessDebugInformation;
    useDefaultTypeTables;
    addNativeEntryPoint: MinimalImageMain;
    build;
    saveTo: "testMinimal.image".

ImageBuilder new
    target: AsmCompilationTarget x86_64 useElf useDwarf asImageBuilderTarget;
    beMinimal;
    withoutInProcessDebugInformation;
    addNativeEntryPoint: MinimalImageMain;
    build;
    saveTo: "testMinimal.x86_64.elf".
